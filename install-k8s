#pass this in userdata 


#!/bin/bash
apt-get update
curl -fsSL https://get.docker.com -o install-docker.sh
sh install-docker.sh


# this installs docker in VM/Instance machine

apt-get update
cd /tmp
wget https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.15/cri-dockerd_0.3.15.3-0.ubuntu-jammy_amd64.deb
sudo dpkg -i cri-dockerd_0.3.15.3-0.ubuntu-jammy_amd64.deb
apt-get update
# apt-transport-https may be a dummy package; if so, you can skip that package
sudo apt-get install -y apt-transport-https ca-certificates curl gpg
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl
sudo systemctl enable --now kubelet


#...........................................
#Now login into master node and initialize the cluster by passing "command"
kubeadm init --pod-network-cidr=10.244.0.0/16 --cri-socket "unix:///var/run/cri-dockerd.sock"

#go as a normal user and execute the mkdir command which is came when you initialise the cluster
#Login into node 1 and execute the join command
kubeadm join  ------------------------------ --cri-socket "unix:///var/run/cri-dockerd.sock" 

#to fix the not ready status, we need to install pod network, lets install flannel on master node

kubectl apply -f https://github.com/coreos/flannel/raw/master/Documentation/kube-flannel.yml

#for auto completion

source <(kubectl completion bash) # set up autocomplete in bash into the current shell, bash-completion package should be installed first.
echo "source <(kubectl completion bash)" >> ~/.bashrc # add autocomplete permanently to your bash shell.



 # applying the Flannel configuration from the master node will set up Flannel networking for the entire cluster, including both the master and worker nodes. Make sure that the worker nodes are properly configured and can communicate with the master node and the Docker registry. 
